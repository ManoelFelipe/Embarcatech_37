<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="ws2812_8c" kind="file" language="C++">
    <compoundname>ws2812.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="yes">pico/stdlib.h</includes>
    <includes local="yes">hardware/pio.h</includes>
    <includes local="yes">hardware/clocks.h</includes>
    <includes refid="ws2812_8pio_8h" local="yes">ws2812.pio.h</includes>
    <incdepgraph>
      <node id="1">
        <label>ws2812.c</label>
        <link refid="ws2812_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>ws2812.pio.h</label>
        <link refid="ws2812_8pio_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>hardware/clocks.h</label>
      </node>
      <node id="5">
        <label>hardware/pio.h</label>
      </node>
      <node id="4">
        <label>pico/stdlib.h</label>
      </node>
      <node id="2">
        <label>stdio.h</label>
      </node>
      <node id="3">
        <label>stdlib.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="define">
      <memberdef kind="define" id="ws2812_8c_1a493b9b7cc0c4de9e5d832a5b9c8fe0f0" prot="public" static="no">
        <name>IS_RGBW</name>
        <initializer>false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copyright (c) 2020 Raspberry Pi (Trading) Ltd.</para>
<para>SPDX-License-Identifier: BSD-3-Clause NOTE: Take into consideration if your WS2812 is a RGB or RGBW variant.</para>
<para>If it is RGBW, you need to set IS_RGBW to true and provide 4 bytes per pixel (Red, Green, Blue, White) and use urgbw_u32().</para>
<para>If it is RGB, set IS_RGBW to false and provide 3 bytes per pixel (Red, Green, Blue) and use urgb_u32().</para>
<para>When RGBW is used with urgb_u32(), the White channel will be ignored (off). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ws2812.c" line="28" column="10" bodyfile="ws2812.c" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ws2812_8c_1a893011783fefc21f30baf08142cd3c35" prot="public" static="no">
        <name>NUM_PIXELS</name>
        <initializer>150</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ws2812.c" line="29" column="10" bodyfile="ws2812.c" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ws2812_8c_1af75dc8bf5891f41c539ef9b8ebd3d1c3" prot="public" static="no">
        <name>WS2812_PIN</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ws2812.c" line="35" column="10" bodyfile="ws2812.c" bodystart="35" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="ws2812_8c_1a0d20517626e480f07ceee32bcff56db8" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* pattern) (PIO pio, uint sm, uint len, uint t)</definition>
        <argsstring>)(PIO pio, uint sm, uint len, uint t)</argsstring>
        <name>pattern</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ws2812.c" line="99" column="10" bodyfile="ws2812.c" bodystart="99" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="ws2812_8c_1a24a31bc0d344f77c0b94c05f47cbeede" prot="public" static="no" mutable="no">
        <type>pattern</type>
        <definition>pattern pat</definition>
        <argsstring></argsstring>
        <name>pat</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ws2812.c" line="101" column="14" bodyfile="ws2812.c" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ws2812_8c_1a8f8f80d37794cde9472343e4487ba3eb" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ws2812.c" line="102" column="17" bodyfile="ws2812.c" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ws2812_8c_1a64334d3679cf928a21ce5de809c862e7" prot="public" static="no" mutable="no">
        <type>const struct </type>
        <definition>const struct  pattern_table[]</definition>
        <argsstring>[]</argsstring>
        <name>pattern_table</name>
        <initializer>= {
         {pattern_snakes,  &quot;Snakes!&quot;},
         {pattern_random,  &quot;Random data&quot;},
         {pattern_sparkle, &quot;Sparkles&quot;},
         {pattern_greys,   &quot;Greys&quot;},
 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ws2812.c" line="108" column="1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="ws2812_8c_1ac8f76ced4ef3cc618340992e0b98ae21" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void put_pixel</definition>
        <argsstring>(PIO pio, uint sm, uint32_t pixel_grb)</argsstring>
        <name>put_pixel</name>
        <param>
          <type>PIO</type>
          <declname>pio</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>sm</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>pixel_grb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ws2812.c" line="43" column="21" bodyfile="ws2812.c" bodystart="43" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="ws2812_8c_1a8f4e70e9d68a810e23a358fe62ffdfa0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t urgb_u32</definition>
        <argsstring>(uint8_t r, uint8_t g, uint8_t b)</argsstring>
        <name>urgb_u32</name>
        <param>
          <type>uint8_t</type>
          <declname>r</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>g</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ws2812.c" line="47" column="25" bodyfile="ws2812.c" bodystart="47" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="ws2812_8c_1a9a58a0d626769c8c027c7bf60ae10a76" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t urgbw_u32</definition>
        <argsstring>(uint8_t r, uint8_t g, uint8_t b, uint8_t w)</argsstring>
        <name>urgbw_u32</name>
        <param>
          <type>uint8_t</type>
          <declname>r</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>g</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>b</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ws2812.c" line="54" column="25" bodyfile="ws2812.c" bodystart="54" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="ws2812_8c_1a936c520c77dd3640169856dda95c0755" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pattern_snakes</definition>
        <argsstring>(PIO pio, uint sm, uint len, uint t)</argsstring>
        <name>pattern_snakes</name>
        <param>
          <type>PIO</type>
          <declname>pio</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>sm</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>len</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ws2812.c" line="62" column="7" bodyfile="ws2812.c" bodystart="62" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="ws2812_8c_1aa356ca9b38b898c4cf179a56267052d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pattern_random</definition>
        <argsstring>(PIO pio, uint sm, uint len, uint t)</argsstring>
        <name>pattern_random</name>
        <param>
          <type>PIO</type>
          <declname>pio</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>sm</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>len</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ws2812.c" line="76" column="7" bodyfile="ws2812.c" bodystart="76" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="ws2812_8c_1a22d482c11872140be273ca3b3ddda1ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pattern_sparkle</definition>
        <argsstring>(PIO pio, uint sm, uint len, uint t)</argsstring>
        <name>pattern_sparkle</name>
        <param>
          <type>PIO</type>
          <declname>pio</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>sm</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>len</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ws2812.c" line="83" column="7" bodyfile="ws2812.c" bodystart="83" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="ws2812_8c_1ae6cec91ea5288546a6516e72bafcd89b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void pattern_greys</definition>
        <argsstring>(PIO pio, uint sm, uint len, uint t)</argsstring>
        <name>pattern_greys</name>
        <param>
          <type>PIO</type>
          <declname>pio</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>sm</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>len</declname>
        </param>
        <param>
          <type>uint</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ws2812.c" line="90" column="7" bodyfile="ws2812.c" bodystart="90" bodyend="97"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#include<sp/>&quot;pico/stdlib.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#include<sp/>&quot;hardware/pio.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#include<sp/>&quot;hardware/clocks.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#include<sp/>&quot;ws2812.pio.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#define<sp/>IS_RGBW<sp/>false</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#define<sp/>NUM_PIXELS<sp/>150</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#ifdef<sp/>PICO_DEFAULT_WS2812_PIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#define<sp/>WS2812_PIN<sp/>PICO_DEFAULT_WS2812_PIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>default<sp/>to<sp/>pin<sp/>2<sp/>if<sp/>the<sp/>board<sp/>doesn&apos;t<sp/>have<sp/>a<sp/>default<sp/>WS2812<sp/>pin<sp/>defined</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#define<sp/>WS2812_PIN<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>the<sp/>pin<sp/>is<sp/>compatible<sp/>with<sp/>the<sp/>platform</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#if<sp/>WS2812_PIN<sp/>&gt;=<sp/>NUM_BANK0_GPIOS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#error<sp/>Attempting<sp/>to<sp/>use<sp/>a<sp/>pin&gt;=32<sp/>on<sp/>a<sp/>platform<sp/>that<sp/>does<sp/>not<sp/>support<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>put_pixel(PIO<sp/>pio,<sp/>uint<sp/>sm,<sp/>uint32_t<sp/>pixel_grb)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>pio_sm_put_blocking(pio,<sp/>sm,<sp/>pixel_grb<sp/>&lt;&lt;<sp/>8u);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint32_t<sp/>urgb_u32(uint8_t<sp/>r,<sp/>uint8_t<sp/>g,<sp/>uint8_t<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)<sp/>(r)<sp/>&lt;&lt;<sp/>8)<sp/>|</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)<sp/>(g)<sp/>&lt;&lt;<sp/>16)<sp/>|</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(uint32_t)<sp/>(b);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint32_t<sp/>urgbw_u32(uint8_t<sp/>r,<sp/>uint8_t<sp/>g,<sp/>uint8_t<sp/>b,<sp/>uint8_t<sp/>w)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)<sp/>(r)<sp/>&lt;&lt;<sp/>8)<sp/>|</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)<sp/>(g)<sp/>&lt;&lt;<sp/>16)<sp/>|</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((uint32_t)<sp/>(w)<sp/>&lt;&lt;<sp/>24)<sp/>|</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(uint32_t)<sp/>(b);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pattern_snakes(PIO<sp/>pio,<sp/>uint<sp/>sm,<sp/>uint<sp/>len,<sp/>uint<sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint<sp/>x<sp/>=<sp/>(i<sp/>+<sp/>(t<sp/>&gt;&gt;<sp/>1))<sp/>%<sp/>64;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&lt;<sp/>10)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>put_pixel(pio,<sp/>sm,<sp/>urgb_u32(0xff,<sp/>0,<sp/>0));</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&gt;=<sp/>15<sp/>&amp;&amp;<sp/>x<sp/>&lt;<sp/>25)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>put_pixel(pio,<sp/>sm,<sp/>urgb_u32(0,<sp/>0xff,<sp/>0));</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&gt;=<sp/>30<sp/>&amp;&amp;<sp/>x<sp/>&lt;<sp/>40)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>put_pixel(pio,<sp/>sm,<sp/>urgb_u32(0,<sp/>0,<sp/>0xff));</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>put_pixel(pio,<sp/>sm,<sp/>0);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pattern_random(PIO<sp/>pio,<sp/>uint<sp/>sm,<sp/>uint<sp/>len,<sp/>uint<sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t<sp/>%<sp/>8)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len;<sp/>++i)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>put_pixel(pio,<sp/>sm,<sp/>rand());</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pattern_sparkle(PIO<sp/>pio,<sp/>uint<sp/>sm,<sp/>uint<sp/>len,<sp/>uint<sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t<sp/>%<sp/>8)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len;<sp/>++i)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>put_pixel(pio,<sp/>sm,<sp/>rand()<sp/>%<sp/>16<sp/>?<sp/>0<sp/>:<sp/>0xffffffff);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pattern_greys(PIO<sp/>pio,<sp/>uint<sp/>sm,<sp/>uint<sp/>len,<sp/>uint<sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>uint<sp/>max<sp/>=<sp/>100;<sp/></highlight><highlight class="comment">//<sp/>let&apos;s<sp/>not<sp/>draw<sp/>too<sp/>much<sp/>current!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>t<sp/>%=<sp/>max;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>put_pixel(pio,<sp/>sm,<sp/>t<sp/>*<sp/>0x10101);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(++t<sp/>&gt;=<sp/>max)<sp/>t<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*pattern)(PIO<sp/>pio,<sp/>uint<sp/>sm,<sp/>uint<sp/>len,<sp/>uint<sp/>t);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>pattern<sp/>pat;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/>}<sp/>pattern_table[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{pattern_snakes,<sp/><sp/></highlight><highlight class="stringliteral">&quot;Snakes!&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{pattern_random,<sp/><sp/></highlight><highlight class="stringliteral">&quot;Random<sp/>data&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{pattern_sparkle,<sp/></highlight><highlight class="stringliteral">&quot;Sparkles&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{pattern_greys,<sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Greys&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/></highlight></codeline>
    </programlisting>
    <location file="ws2812.c"/>
  </compounddef>
</doxygen>
