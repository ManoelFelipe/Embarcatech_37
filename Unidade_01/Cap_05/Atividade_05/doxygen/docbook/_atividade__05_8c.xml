<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__atividade__05_8c" xml:lang="en-US">
<title>C:/Users/manoe/OneDrive/TI/EmbarcaTech/Segunda Fase/01_Unid.01_Microcontrolador/Atividades/Cap_05/Atividade_05/src/Atividade_05.c File Reference</title>
<indexterm><primary>C:/Users/manoe/OneDrive/TI/EmbarcaTech/Segunda Fase/01_Unid.01_Microcontrolador/Atividades/Cap_05/Atividade_05/src/Atividade_05.c</primary></indexterm>
<para>

<para>Sistema de Aquisição de Temperatura com DMA e Interface I2C em Microcontrolador RP2040. </para>
 
</para>
<programlisting linenumbering="unnumbered">#include &lt;stdio.h&gt;<?linebreak?>#include &lt;string.h&gt;<?linebreak?>#include &quot;pico/stdlib.h&quot;<?linebreak?>#include &quot;hardware/adc.h&quot;<?linebreak?>#include &quot;hardware/dma.h&quot;<?linebreak?>#include &quot;hardware/i2c.h&quot;<?linebreak?>#include &quot;ssd1306_i2c.h&quot;<?linebreak?>#include &quot;ssd1306.h&quot;<?linebreak?>#include &quot;ssd1306_font.h&quot;<?linebreak?></programlisting><simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#define <link linkend="__atividade__05_8c_1ad0c329adebc27917fc0a4f51079acf6a">SAMPLES</link>&#160;&#160;&#160;100</para>
</listitem>
            <listitem><para>#define <link linkend="__atividade__05_8c_1ae2377e1385d49cf9c9ba44a8d07c94db">TEMP_UPDATE_MS</link>&#160;&#160;&#160;500</para>
</listitem>
            <listitem><para>#define <link linkend="__atividade__05_8c_1ad9ecf80e1eac083d16ec47f9d3aeb39f">I2C_PORT</link>&#160;&#160;&#160;i2c1</para>
</listitem>
            <listitem><para>#define <link linkend="__atividade__05_8c_1a31568ea8caf00a3ec699c01652c771d0">I2C_BAUDRATE</link>&#160;&#160;&#160;400000</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect><title>OLED I²C Mapping</title>

<para>Pinos utilizados pelo barramento I²C dedicado ao display. </para>
        <itemizedlist>
            <listitem><para>#define <link linkend="__atividade__05_8c_1ae8d87fbd2ecb585ea5b5726469914735">OLED_I2C_SDA_PIN</link>&#160;&#160;&#160;14</para>
</listitem>
            <listitem><para>#define <link linkend="__atividade__05_8c_1a4461f81a16bc2633c7295aba245a31b3">OLED_I2C_SCL_PIN</link>&#160;&#160;&#160;15</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="__atividade__05_8c_1a840291bc02cba5474a4cb46a9b9566fe"/>int <emphasis role="strong">main</emphasis> (void)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Sistema de Aquisição de Temperatura com DMA e Interface I2C em Microcontrolador RP2040. </para>

<para><literallayout><computeroutput>     Este progrma tem como objetivo demonstar como utilizar:
        * ADC interno (canal 4) para ler o sensor de temperatura
        * Controlador DMA para transferir automaticamente as amostras do FIFO do ADC para a RAM
        * Barramento I2C para atualizar um display OLED SSD1306

     O ciclo de trabalho é:
        1. O ADC é configurado para amostragem contínua do canal 4.
        2. Um canal de DMA lê amostras(SAMPLES) do FIFO e armazena em um buffer.
        3. Quando o bloco de DMA termina, calculamos a média, convertemos em °C e
           enviamos o valor formatado para o display.
        4. O DMA é usado sem intervenção intensiva da CPU, permitindo que o núcleo possa
           ficar em espera reduzindo consumo.
</computeroutput></literallayout></para>

<para><note><title>Note</title>

<para>Também foi esclarecida a razão de se utilizar <computeroutput>memset()</computeroutput> + <computeroutput>render_on_display()</computeroutput> em vez dos atalhos <computeroutput>ssd1306_clear()</computeroutput> e <computeroutput>ssd1306_show()</computeroutput>. O uso direto do frame‑buffer permite:<orderedlist>
<listitem>
<para>Renderizar apenas regiões específicas da tela, economizando tráfego I²C quando necessário;</para>
</listitem><listitem>
<para>Manter a lógica didática de <emphasis>clear → draw → show</emphasis> explícita;</para>
</listitem><listitem>
<para>Suportar múltiplos frame‑buffers simultâneos caso o projeto evolua para animações ou janelas sobrepostas. Caso deseje simplificar, basta substituir o bloco marcado em display_temperature() pelos atalhos da biblioteca.</para>
</listitem></orderedlist>
</para>
</note>
Não foi tratado os caracteres especiais que apace no display OLED então, a temperatura médida a exemplo 26 55 c --&gt; 26,55 ºc A blibioteca atual <link linkend="_ssd1306__font_8h_source">ssd1306_font.h</link> e ssd1306_i2c.c só reconhece acaracteres simples maiúsculas.</para>

<para>@hardware Requisitos de hardware: • Raspberry Pi Pico / Pico W • Display OLED SSD1306 conectado aos pinos I2C: – SDA → GP14  (GPIO 14) – SCL → GP55  (GPIO 15)</para>

<para>@compile Compilação (exemplo de CMake): add_executable(Atividade_05 <link linkend="__atividade__05_8c">src/Atividade_05.c</link> lib/ssd1306_i2c.c )</para>

<para>IMPORTANTE: • Todas as funções estão extensivamente comentadas, estilo Doxygen para fins didáticos. • O código assume Vref = 3,3 V (padrão do RP2040) para a conversão do ADC. • Ajuste SAMPLES e TEMP_UPDATE_MS conforme necessidade.</para>

<para><formalpara><title>Author</title>

<para>Manoel Furtado </para>
</formalpara>
<formalpara><title>Date</title>

<para>18 mai 2025 </para>
</formalpara>
<formalpara><title>Copyright</title>

<para>2025 Manoel Furtado (MIT License) (veja LICENSE.md) </para>
</formalpara>
</para>
</section>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="__atividade__05_8c_1a31568ea8caf00a3ec699c01652c771d0"/><section>
    <title>I2C_BAUDRATE</title>
<indexterm><primary>I2C_BAUDRATE</primary><secondary>Atividade_05.c</secondary></indexterm>
<indexterm><primary>Atividade_05.c</primary><secondary>I2C_BAUDRATE</secondary></indexterm>
<para><computeroutput>#define I2C_BAUDRATE&#160;&#160;&#160;400000</computeroutput></para>
<para>400 kHz – modo Fast I²C </para>
</section>
<anchor xml:id="__atividade__05_8c_1ad9ecf80e1eac083d16ec47f9d3aeb39f"/><section>
    <title>I2C_PORT</title>
<indexterm><primary>I2C_PORT</primary><secondary>Atividade_05.c</secondary></indexterm>
<indexterm><primary>Atividade_05.c</primary><secondary>I2C_PORT</secondary></indexterm>
<para><computeroutput>#define I2C_PORT&#160;&#160;&#160;i2c1</computeroutput></para>
<para>Porta I²C utilizada pinos GP4/GP5 no Pico </para>
</section>
<anchor xml:id="__atividade__05_8c_1a4461f81a16bc2633c7295aba245a31b3"/><section>
    <title>OLED_I2C_SCL_PIN</title>
<indexterm><primary>OLED_I2C_SCL_PIN</primary><secondary>Atividade_05.c</secondary></indexterm>
<indexterm><primary>Atividade_05.c</primary><secondary>OLED_I2C_SCL_PIN</secondary></indexterm>
<para><computeroutput>#define OLED_I2C_SCL_PIN&#160;&#160;&#160;15</computeroutput></para>
<para>GPIO que carrega o sinal SCL </para>
</section>
<anchor xml:id="__atividade__05_8c_1ae8d87fbd2ecb585ea5b5726469914735"/><section>
    <title>OLED_I2C_SDA_PIN</title>
<indexterm><primary>OLED_I2C_SDA_PIN</primary><secondary>Atividade_05.c</secondary></indexterm>
<indexterm><primary>Atividade_05.c</primary><secondary>OLED_I2C_SDA_PIN</secondary></indexterm>
<para><computeroutput>#define OLED_I2C_SDA_PIN&#160;&#160;&#160;14</computeroutput></para>
<para>GPIO que carrega o sinal SDA </para>
</section>
<anchor xml:id="__atividade__05_8c_1ad0c329adebc27917fc0a4f51079acf6a"/><section>
    <title>SAMPLES</title>
<indexterm><primary>SAMPLES</primary><secondary>Atividade_05.c</secondary></indexterm>
<indexterm><primary>Atividade_05.c</primary><secondary>SAMPLES</secondary></indexterm>
<para><computeroutput>#define SAMPLES&#160;&#160;&#160;100</computeroutput></para>
<para>Nº de amostras que compõem cada bloco de DMA </para>
</section>
<anchor xml:id="__atividade__05_8c_1ae2377e1385d49cf9c9ba44a8d07c94db"/><section>
    <title>TEMP_UPDATE_MS</title>
<indexterm><primary>TEMP_UPDATE_MS</primary><secondary>Atividade_05.c</secondary></indexterm>
<indexterm><primary>Atividade_05.c</primary><secondary>TEMP_UPDATE_MS</secondary></indexterm>
<para><computeroutput>#define TEMP_UPDATE_MS&#160;&#160;&#160;500</computeroutput></para>
<para>Intervalo (ms) entre atualizações do display </para>
</section>
</section>
</section>
